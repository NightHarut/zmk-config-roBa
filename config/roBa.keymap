#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R             &kp T                                                                  &kp Y        &kp U    &lt 5 I    &kp O    &lt 6 P
&kp A             &kp S         &kp D         &kp F             &kp G        &mkp MB3                     &kp MINUS                    &kp H        &kp J    &kp K      &kp L    &lt 2 SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &kp B        &mt LCTRL RIGHT_BRACKET      &mt RIGHT_CONTROL BACKSLASH  &kp N        &lt 6 M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&lt 6 HOME        &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 INT_HENKAN  &lt 2 SPACE  &lt 3 INT_MUHENKAN           &lt 1 BACKSPACE              &lt 2 ENTER                               &lt 5 F23
            >;

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE        &kp LEFT_BRACKET  &trans            &trans            &trans                                  &trans            &trans         &kp F18         &kp F19    &kp LEFT_BRACKET
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)  &trans       &kp LS(MINUS)  &kp LS(NUMBER_6)  &kp LS(N8)     &kp LS(N9)      &kp EQUAL  &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &trans            &trans            &trans            &trans      &kp F20      &kp F21        &kp QUESTION      &kp BACKSLASH  &kp UNDERSCORE  &kp PLUS   &mt RIGHT_SHIFT DOUBLE_QUOTES
&kp END           &trans            &trans            &trans            &trans      &trans       &trans         &kp DEL                                                     &kp F24
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1                &kp NUMBER_2     &kp NUMBER_3     &kp NUMBER_4     &kp N5                                        &kp NUMBER_6         &kp N7    &kp N8      &kp N9    &kp N0
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp C_MUTE      &kp UNDERSCORE  &kp LS(LG(S))        &mkp MB1  &mkp MB3    &mkp MB2  &kp SQT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL       &trans          &kp RA(PRINTSCREEN)  &mkp MB4  &kp LC(N0)  &mkp MB5  &mt RIGHT_SHIFT RA(ENTER)
&trans                      &trans           &trans           &trans           &trans        &trans          &trans          &kp TILDE                                            &kp RC(ENTER)
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        ARROW {
            bindings = <
&kp F1          &kp F2                  &kp F3          &kp F4                   &kp F5                            &kp N7        &kp N8        &kp N9        &kp ASTRK  &kp DELETE
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &kp C_PP      &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &kp EQUAL
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans        &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH  &kp RIGHT_SHIFT
&trans          &trans                  &trans          &trans                   &trans   &trans        &kp N0     &kp PERIOD                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans          &trans        &trans        &trans  &trans                      &kp F6          &kp F7          &kp F8                  &kp F9                   &kp F10
&trans          &trans        &trans        &trans  &trans  &trans      &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW            &kp RIGHT_ARROW          &kp F11
&kp LEFT_SHIFT  &trans        &trans        &trans  &trans  &trans      &trans  &trans          &trans          &kp LG(LS(LEFT_ARROW))  &kp LS(LG(RIGHT_ARROW))  &kp F12
&trans          &kp LEFT_GUI  &kp LEFT_ALT  &trans  &trans  &trans      &trans  &trans                                                                           &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0        &bt BT_SEL 1        &bt BT_SEL 2            &bt BT_SEL 3             &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(UP_ARROW)        &kp LG(RIGHT_ARROW)      &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans              &trans              &kp LS(LG(LEFT_ARROW))  &kp LS(LG(RIGHT_ARROW))  &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                                                   &bt BT_CLR_ALL
            >;
        };
    };
};
